# Generated by Django 3.0.2 on 2020-02-25 11:01

import accounts.validators
import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import posts.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BibleStudies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500, unique=True)),
                ('slug', models.SlugField(default='djangodbmodelsfieldscharfield', max_length=500, unique=True)),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateField(auto_now=True)),
                ('featured_image', models.ImageField(blank=True, help_text='Include a high-quality image in your story to make it more inviting to readers.', null=True, upload_to='biblestudies_photos/%Y/%m/%d/', validators=[accounts.validators.validate_Image_extension])),
                ('restrict_comment', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('bible_likes', models.ManyToManyField(blank=True, related_name='bible_likes', to=settings.AUTH_USER_MODEL)),
                ('bookmarks_bible', models.ManyToManyField(blank=True, related_name='bookmarks_bible', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('slug', models.SlugField(default='djangodbmodelsfieldscharfield', max_length=100)),
                ('description', models.CharField(max_length=500)),
                ('is_active', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('story_code', models.CharField(default=posts.models.GenerateOTP, editable=False, max_length=20, unique=True)),
                ('title', models.CharField(max_length=500, unique=True)),
                ('slug', models.SlugField(default='djangodbmodelsfieldscharfield', max_length=500, unique=True)),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Drafted', 'Drafted'), ('Published', 'Published'), ('Rejected', 'Rejected'), ('Trashed', 'Trashed')], default='Drafted', max_length=10)),
                ('featured_image', models.ImageField(blank=True, help_text='Include a high-quality image in your story to make it more inviting to readers.', null=True, upload_to='blog_photos/%Y/%m/%d/', validators=[accounts.validators.validate_Image_extension])),
                ('featured_video', models.FileField(blank=True, help_text='You can include high quality video about your story.', null=True, upload_to='blog_videos/%Y/%m/%d/', validators=[accounts.validators.validate_file_extension])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateField(auto_now=True)),
                ('restrict_comment', models.BooleanField(default=False)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.Category')),
                ('favourite', models.ManyToManyField(blank=True, related_name='favourite', to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(blank=True, related_name='likes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated_on'],
            },
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(default='djangodbmodelsfieldscharfield', max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='WrittenBy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_approved', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tech',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500, unique=True)),
                ('slug', models.SlugField(default='djangodbmodelsfieldscharfield', max_length=500, unique=True)),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateField(auto_now=True)),
                ('featured_image', models.ImageField(blank=True, help_text='Include a high-quality image in your story to make it more inviting to readers.', null=True, upload_to='tech_photos/%Y/%m/%d/', validators=[accounts.validators.validate_Image_extension])),
                ('restrict_comment', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('bookmarks_tech', models.ManyToManyField(blank=True, related_name='bookmarks_tech', to=settings.AUTH_USER_MODEL)),
                ('tech_likes', models.ManyToManyField(blank=True, related_name='tech_likes', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('written_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='posts.WrittenBy')),
            ],
        ),
        migrations.CreateModel(
            name='Quotes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500, unique=True)),
                ('slug', models.SlugField(default='djangodbmodelsfieldscharfield', max_length=500, unique=True)),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateField(auto_now=True)),
                ('featured_image', models.ImageField(blank=True, help_text='Include a high-quality image in your story to make it more inviting to readers.', null=True, upload_to='quotes_photos/%Y/%m/%d/', validators=[accounts.validators.validate_Image_extension])),
                ('restrict_comment', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('bookmark_quote', models.ManyToManyField(blank=True, related_name='bookmark_quote', to=settings.AUTH_USER_MODEL)),
                ('quotes_likes', models.ManyToManyField(blank=True, related_name='quotes_likes', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('written_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='posts.WrittenBy')),
            ],
        ),
        migrations.CreateModel(
            name='PrayerRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prayerrequest_hex', models.CharField(default=posts.models.GenerateOTP, editable=False, max_length=22, unique=True)),
                ('area', models.CharField(choices=[{'', 'Select Prayer Area'}, ('General', 'General'), ('Emotional', 'Emotional Healing'), ('Physical', 'Physical Healing'), ('Finances', 'Finances'), ('Relation', 'Relationship'), ('Spiritual', 'Spiritual Growth')], max_length=50, verbose_name='Please Pray For Me In The Following Area')),
                ('message', models.TextField()),
                ('is_done', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PostHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='posts.Post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='post',
            name='tags',
            field=models.ManyToManyField(related_name='rel_posts', to='posts.Tags'),
        ),
        migrations.AddField(
            model_name='post',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Policy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('policy_hex', models.CharField(default=posts.models.GenerateOTP, editable=False, max_length=20, unique=True)),
                ('title', models.CharField(max_length=500, unique=True)),
                ('slug', models.SlugField(default='djangodbmodelsfieldscharfield', max_length=500, unique=True)),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateField(auto_now=True)),
                ('restrict_comment', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('bookmarks', models.ManyToManyField(blank=True, related_name='bookmarks', to=settings.AUTH_USER_MODEL)),
                ('policy_likes', models.ManyToManyField(blank=True, related_name='policy_likes', to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(related_name='tags', to='posts.Tags')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('written_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='posts.WrittenBy')),
            ],
        ),
        migrations.CreateModel(
            name='Devotion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500, unique=True)),
                ('slug', models.SlugField(default='djangodbmodelsfieldscharfield', max_length=500, unique=True)),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateField(auto_now=True)),
                ('featured_image', models.ImageField(blank=True, help_text='Include a high-quality image in your story to make it more inviting to readers.', null=True, upload_to='devotion_photos/%Y/%m/%d/', validators=[accounts.validators.validate_Image_extension])),
                ('restrict_comment', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('bookmarks_devotion', models.ManyToManyField(blank=True, related_name='bookmarks_devotion', to=settings.AUTH_USER_MODEL)),
                ('devotion_likes', models.ManyToManyField(blank=True, related_name='devotion_likes', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('written_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='posts.WrittenBy')),
            ],
        ),
        migrations.CreateModel(
            name='CommentsTech',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('reply', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='posts.CommentsTech')),
                ('tech', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.Tech')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CommentsQuotes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('quote', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.Quotes')),
                ('reply', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='posts.CommentsQuotes')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CommentsPolicy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.Policy')),
                ('reply', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='posts.CommentsPolicy')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CommentsDevotion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('devotion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.Devotion')),
                ('reply', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='posts.CommentsDevotion')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CommentsBibleStudies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('biblestudies', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.BibleStudies')),
                ('reply', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='posts.CommentsBibleStudies')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.Post')),
                ('reply', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='posts.Comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='biblestudies',
            name='written_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='posts.WrittenBy'),
        ),
    ]
